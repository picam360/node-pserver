#docker build -t pserver:0.1.7 -f Dockerfile.jetson .
FROM nvcr.io/nvidia/l4t-base:r32.5.0

COPY libopencv_calib3d.so.4.1.1 /usr/lib/aarch64-linux-gnu/libopencv_calib3d.so.4.1
COPY libopencv_core.so.4.1.1 /usr/lib/aarch64-linux-gnu/libopencv_core.so.4.1
COPY libopencv_imgproc.so.4.1.1 /usr/lib/aarch64-linux-gnu/libopencv_imgproc.so.4.1
COPY libopencv_features2d.so.4.1.1 /usr/lib/aarch64-linux-gnu/libopencv_features2d.so.4.1
COPY libopencv_flann.so.4.1.1 /usr/lib/aarch64-linux-gnu/libopencv_flann.so.4.1
COPY libtbb.so.2 /usr/lib/aarch64-linux-gnu/libtbb.so.2

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    curl \
    git \
    nano \
    pkg-config \
    v4l-utils \
    usbutils
RUN curl -L git.io/nodebrew | perl - setup
RUN echo "export PATH=$HOME/.nodebrew/current/bin:\$PATH" >> $HOME/.bashrc
ENV HOME /root
ENV PATH $HOME/.nodebrew/current/bin:$PATH
RUN sed -i -z "s/} elsif (\$machine =~ m\/aarch64\/) {\n        \$arch = 'armv7l';/} elsif (\$machine =~ m\/aarch64\/) {\n        \$arch = 'arm64'/g" $HOME/.nodebrew/nodebrew
RUN nodebrew install v14.17.1 && \
    nodebrew use v14.17.1
RUN npm config set unsafe-perm true && \
    npm -g install node-pserver@0.1.7

COPY pserver-config.json /root/config.json
COPY lens_params0.json /root/lens_params0.json
COPY pviewer-config.json /root/.nodebrew/current/lib/node_modules/node-pserver/www/config.json

EXPOSE 9001
ENTRYPOINT ["pserver"]